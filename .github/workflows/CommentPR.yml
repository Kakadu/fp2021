name: Comment on the pull request

# read-write repo token
# access to secrets
on:
  workflow_run:
    workflows: ["Build PR"]
    types:
      - completed

jobs:
  upload:
    runs-on: ubuntu-latest
    if: >
      ${{ github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success' }}
    steps:
      - run: echo "${{ github.event.workflow_run.id }}"

      - name: 'Download artifact'
        uses: actions/github-script@v3.1.0
        with:
          script: |
            console.log(${{ github.event.workflow_run.id }});
            var artifacts = await github.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{ github.event.workflow_run.id }},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "other_stuff";
            })[0];
            var download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{ github.workspace }}/other_stuff.zip', Buffer.from(download.data));

      - run: unzip other_stuff.zip
      - run: |
          echo "LANG_NAME=$(cat projectname.txt)" >> $GITHUB_ENV
          echo "PIARAST_NAME=$(cat piarast.txt)" >> $GITHUB_ENV
          echo "${{ env.LANG_NAME }}"
          echo "${{ env.PIARAST_NAME }}"


      - uses: reviewdog/action-setup@v1
      - name: Run reviewdog
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >
          cat lints.rdjsonl |
          reviewdog -f=rdjsonl -filter-mode nofilter -reporter=github-pr-review

      - name: 'Comment on PR'
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            var fs = require('fs');
            var issue_number = Number(fs.readFileSync('./projectname.txt'));
            await github.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: 'Everything is OK. Thank you for the PR!'
            });
